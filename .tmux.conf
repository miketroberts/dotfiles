# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'nhdaly/tmux-better-mouse-mode'
set -g @plugin 'tmux-plugins/tmux-pain-control'
#set -g @plugin '2kabhishek/tmux2k'
set -g @plugin 'sainnhe/tmux-fzf'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'joshmedeski/tmux-nerd-font-window-name'
set -g @plugin 'alexwforsythe/tmux-which-key'
#set -g @plugin 'niksingh710/minimal-tmux-status'
set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'omerxx/tmux-sessionx'
set -g @plugin 'catppuccin/tmux#v2.1.3'
#set -g @tmux2k-theme 'duo'
#set -g @tmux2k-icons-only true

#set -g @tmux2k-left-plugins "window"
#set -g @tmux2k-right-plugins "battery time"

set -g @catppuccin_flavor 'macchiato'
set -g @catppuccin_window_status_style "rounded"
set -g @catppuccin_window_number_position 'right'
set -g @catppuccin_window_status 'no'
set -g @catppuccin_window_default_text '#W'
set -g @catppuccin_window_current_fill 'number'
set -g @catppuccin_window_current_text '#W'
set -g @catppuccin_window_current_color '#{E:@thm_surface_2}'
set -g @catppuccin_date_time_text '%d.%m. %H:%M'
set -g @catppuccin_status_module_text_bg '#{E:@thm_mantle}'

set -g @sessionx-bind 'o'


set -g status-right-length 100
set -g status-left-length 100
set -g status-left ""
set -g status-right "#{E:@catppuccin_status_application}"
set -agF status-right "#{E:@catppuccin_status_cpu}"
set -ag status-right "#{E:@catppuccin_status_session}"
if 'test -r /sys/class/power_supply/BAT*' {
  set -agF status-right '#{E:@catppuccin_status_battery}'
}
set -ag status-right '#{E:@catppuccin_status_date_time}'

# Ensure that everything on the right side of the status line
# is included.
set -g status-right-length 100

# use C-a, since it's on the home row and easier to hit than C-b
set-option -g prefix C-a
unbind-key C-a
bind-key C-a send-prefix
set -g base-index 1
set -g renumber-window on

set -g mouse on
set-window-option -g xterm-keys on

bind-key : command-prompt
bind-key r refresh-client
bind-key L clear-history

bind-key space next-window
bind-key bspace previous-window
bind-key enter next-layout

# use vim-like keys for splits and windows
bind-key v split-window -h
bind-key s split-window -v
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# smart pane switching with awareness of vim splits
#bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-h) || tmux select-pane -L"
#bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-j) || tmux select-pane -D"
#bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-k) || tmux select-pane -U"
#bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-l) || tmux select-pane -R"
#bind -n 'C-\' run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys 'C-\\') || tmux select-pane -l"
bind C-l send-keys 'C-l'

bind-key C-o rotate-window

bind-key + select-layout main-horizontal
bind-key = select-layout main-vertical

set-window-option -g other-pane-height 25
set-window-option -g other-pane-width 80
set-window-option -g display-panes-time 1500
set-window-option -g window-status-current-style fg=magenta

bind-key a last-pane
bind-key q display-panes
bind-key c new-window
bind-key t next-window
bind-key T previous-window

bind-key [ copy-mode
bind-key ] paste-buffer

# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Set window notifications
setw -g monitor-activity on
set -g visual-activity on

# Enable native Mac OS X copy/paste
set-option -g default-command "/bin/bash -c 'which reattach-to-user-namespace >/dev/null && exec reattach-to-user-namespace $SHELL -l || exec $SHELL -l'"

# Allow the arrow key to be used immediately after changing windows
set-option -g repeat-time 0

#set -g status-right '#(gitmux "#{pane_current_path}")'

set -g default-terminal "tmux-256color"
set -ag terminal-overrides ",xterm-256color:RGB"

# Custom Layout
#set -g @minimal-tmux-fg "#000000"
#set -g @minimal-tmux-bg "#698DDA"
#set -g @minimal-tmux-justify "centre"
#set -g @minimal-tmux-indicator-str "  tmux  "
#set -g @minimal-tmux-indicator true
#set -g @minimal-tmux-status "bottom"

# Enables or disables the left and right status bar
#set -g @minimal-tmux-right true
#set -g @minimal-tmux-left true

# expanded icon (fullscreen icon)
set -g @minimal-tmux-expanded-icon "󰊓 "

# on all tabs (default is false)
# false will make it visible for the current tab only
#set -g @minimal-tmux-show-expanded-icons-for-all-tabs true

# To add or remove extra text in status bar
#set -g @minimal-tmux-status-right-extra ""
#set -g @minimal-tmux-status-left-extra ""

# To make the selection box rounded () or edged <>
# Default is nothing, when set to true default is edged
#set -g @minimal-tmux-use-arrow true
#set -g @minimal-tmux-right-arrow ""
#set -g @minimal-tmux-left-arrow ""

# If getting strings cut in left status or right
# Here 20 is the length of the characters in the string
#set -g status-right-length 20
#set -g status-left-length 20

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
